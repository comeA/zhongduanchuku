import os
import pandas as pd
from modules.sn_data_process import process_sn_data, sort_and_save_sn_data
from modules.vlookup_module import perform_vlookup, perform_vlookup_multi
from modules.insert_columns import insert_columns

def get_sheet_name(prompt):
    """循环提示用户输入工作表名称，直到输入非空值为止。"""
    while True:
        sheet_name = input(prompt).strip()
        if sheet_name:
            return sheet_name
        else:
            print("工作表名称不能为空，请重新输入。")

def get_file_path(prompt):
    """循环提示用户输入文件路径，直到文件存在为止。"""
    while True:
        file_path = input(prompt).replace("\\", "/").strip()
        if os.path.exists(file_path):
            return file_path
        else:
            print(f"文件路径 {file_path} 不存在，请重新输入。")

if __name__ == "__main__":
    print("欢迎使用终端数据处理程序！")

    source_filepath = get_file_path("请输入源文件路径：")
    source_sheet = get_sheet_name("请输入源文件子表名称：")

    dest_filepath = input("请输入目标文件路径：").replace("\\", "/").strip()
    result_sheet = get_sheet_name("请输入目标文件子表名称：")

    process_result, filtered_sheet_name = process_sn_data(source_filepath, source_sheet, dest_filepath, result_sheet)
    if process_result:
        insert_cols_before_vlookup = input("数据已成功复制和筛选。是否立即在筛选后的sheet中插入新列？(y/n): ")
        if insert_cols_before_vlookup.lower() == 'y':
            if insert_columns(dest_filepath, filtered_sheet_name):
                print("筛选后的sheet新列插入成功！")
            else:
                print("筛选后的sheet新列插入失败！")
        else:
            print("跳过插入新列操作。")

        continue_processing = input("是否继续处理“业务号码-LOID（SN码）”数据？(y/n): ")
        if continue_processing.lower() == 'y':
            while True:
                sn_data_filepath = get_file_path("请输入“业务号码-LOID（SN码）”数据文件路径：")
                sn_sheet = get_sheet_name("请输入“业务号码-LOID（SN码）”文件子表名称：")

                if "dwd_hzluheb_acc_sn_final_pg" not in os.path.basename(sn_data_filepath) and "dwd_hzluheb_acc_sn_final_pg" not in sn_sheet:
                    print("文件名或子表名不包含关键字 dwd_hzluheb_acc_sn_final_pg，请检查")
                    continue

                sorted_sn_filepath = os.path.join(os.path.dirname(sn_data_filepath), "sorted_" + os.path.basename(sn_data_filepath))
                if sort_and_save_sn_data(sn_data_filepath, sn_sheet, sorted_sn_filepath):
                    try:
                        df = pd.read_excel(dest_filepath, sheet_name=filtered_sheet_name, engine='openpyxl')
                        sn_df = pd.read_excel(sorted_sn_filepath, sheet_name=sn_sheet, engine='openpyxl')

                        lookup_cols_input = input("请输入用于匹配的列名（多列用逗号分隔，例如：col1,col2，单列直接回车）：")
                        if lookup_cols_input:
                            lookup_cols = [col.strip() for col in lookup_cols_input.split(',')]
                            df = perform_vlookup_multi(df, sn_df, lookup_cols)
                        else:
                            df = perform_vlookup(df, sn_df)

                        if df is not None:
                            with pd.ExcelWriter(dest_filepath, engine='openpyxl', mode='a', if_sheet_exists='overlay') as writer:
                                df.to_excel(writer, sheet_name=filtered_sheet_name, index=False)
                            print("LOID（SN码）已成功匹配并添加到文件中。")
                        else:
                            print("VLOOKUP 操作失败。")
                        break
                    except FileNotFoundError as e:
                        print(f"文件不存在：{e}")
                        break
                    except ValueError as e:
                        print(f"工作表不存在或文件格式错误：{e}")
                        break
                    except Exception as e:
                        print(f"其他错误：{e}")
                        break
                else:
                    print("处理SN数据失败，请检查文件内容和格式。")
                    break

        elif continue_processing.lower() == 'n':
            print("操作完成！")
        else:
            print("无效的输入，操作完成！")
    else:
        print("处理失败！")

    print("程序结束。")




'''
import os
import pandas as pd
from modules.sn_data_process import process_sn_data, sort_and_save_sn_data
from modules.vlookup_module import perform_vlookup, perform_vlookup_multi
from modules.insert_columns import insert_columns

def get_sheet_name(prompt):
    """循环提示用户输入工作表名称，直到输入非空值为止。"""
    while True:
        sheet_name = input(prompt)
        if sheet_name:
            return sheet_name
        else:
            print("工作表名称不能为空，请重新输入。")

def get_file_path(prompt):
    """循环提示用户输入文件路径，直到文件存在为止。"""
    while True:
        file_path = input(prompt).replace("\\", "/")
        if os.path.exists(file_path):
            return file_path
        else:
            print(f"文件路径 {file_path} 不存在，请重新输入。")

if __name__ == "__main__":
    print("欢迎使用终端数据处理程序！")

    source_filepath = input("请输入源文件路径：").replace("\\", "/")
    source_sheet = get_sheet_name("请输入源文件子表名称：")

    dest_filepath = input("请输入目标文件路径：").replace("\\", "/") # 直接获取目标文件路径
    result_sheet = get_sheet_name("请输入目标文件子表名称：")
    # source_filepath = get_file_path("请输入源文件路径：")
    # source_sheet = get_sheet_name("请输入源文件子表名称：")
    #
    # dest_filepath = get_file_path("请输入目标文件路径：")
    # result_sheet = get_sheet_name("请输入目标文件子表名称：")

    if process_sn_data(source_filepath, source_sheet, dest_filepath, result_sheet):
        insert_cols = input("数据已成功复制和筛选。是否继续插入新列？(y/n): ")
        if insert_cols.lower() == 'y':
            if insert_columns(dest_filepath, result_sheet):
                print("新列插入成功！")
            else:
                print("新列插入失败！")

        continue_processing = input("是否继续处理“业务号码-LOID（SN码）”数据？(y/n): ")
        if continue_processing.lower() == 'y':
            while True:
                sn_data_filepath = get_file_path("请输入“业务号码-LOID（SN码）”数据文件路径：")
                sn_sheet = get_sheet_name("请输入“业务号码-LOID（SN码）”文件子表名称：")

                if "dwd_hzluheb_acc_sn_final_pg" not in os.path.basename(sn_data_filepath) and "dwd_hzluheb_acc_sn_final_pg" not in sn_sheet:
                    print("文件名或子表名不包含关键字 dwd_hzluheb_acc_sn_final_pg，请检查")
                    continue

                sorted_sn_filepath = os.path.join(os.path.dirname(sn_data_filepath), "sorted_" + os.path.basename(sn_data_filepath))
                if sort_and_save_sn_data(sn_data_filepath, sn_sheet, sorted_sn_filepath):
                    try:
                        df = pd.read_excel(dest_filepath, sheet_name=f"{result_sheet}_筛选后", engine='openpyxl')
                        sn_df = pd.read_excel(sorted_sn_filepath, sheet_name=sn_sheet, engine='openpyxl')

                        lookup_cols_input = input("请输入用于匹配的列名（多列用逗号分隔，例如：col1,col2，单列直接回车）：")
                        if lookup_cols_input:
                            lookup_cols = [col.strip() for col in lookup_cols_input.split(',')]
                            df = perform_vlookup_multi(df, sn_df, lookup_cols)
                        else:
                            df = perform_vlookup(df, sn_df)

                        if df is not None:
                            with pd.ExcelWriter(dest_filepath, engine='openpyxl', mode='a', if_sheet_exists='overlay') as writer:
                                df.to_excel(writer, sheet_name=f"{result_sheet}_筛选后", index=False)
                            print("LOID（SN码）已成功匹配并添加到文件中。")
                        else:
                            print("VLOOKUP 操作失败。")
                        break
                    except FileNotFoundError as e:
                        print(f"文件不存在：{e}")
                        break
                    except ValueError as e:
                        print(f"工作表不存在或文件格式错误：{e}")
                        break
                else:
                    print("处理SN数据失败，请检查文件内容和格式。")
                    break

        elif continue_processing.lower() == 'n':
            print("操作完成！")
        else:
            print("无效的输入，操作完成！")
    else:
        print("处理失败！")

    print("程序结束。")

'''